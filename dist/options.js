(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var themeSelect = document.getElementById('theme');
var replaceTextInput = document.getElementById('replace-text');
var form = document.getElementById('add-form');
var userInput = document.getElementById('user-input');
var userList = document.getElementById('user-list');

chrome.storage.local.get(null, function (data) {
  var theme = data.theme || 'cats';
  var users = data.users || [];
  var replaceText = !!data.replaceText;

  themeSelect.value = theme;
  replaceTextInput.checked = replaceText;
  renderList(users);

  themeSelect.addEventListener('change', updateTheme);
  replaceTextInput.addEventListener('change', updateReplaceText);

  form.addEventListener('submit', function (e) {
    e.preventDefault();

    var user = userInput.value.trim();
    if (user && ! ~users.indexOf(user)) {
      users.push(user);
      chrome.storage.local.set({ users: users });
      renderList(users);
      userInput.value = '';
    }
  });

  // handle removals
  userList.addEventListener('click', function (e) {
    var t = e.target;

    if (t.className.match(/user-list-remove/)) {
      (function () {
        var user = t.parentNode.getAttribute('data-user');
        users = users.filter(function (u) {
          return u != user;
        });
        chrome.storage.local.set({ users: users });
        renderList(users);
      })();
    }
  });
});

function renderList(users) {
  userList.innerHTML = '';
  users.forEach(function (user) {
    userList.appendChild(itemForUser(user));
  });
}

function updateTheme() {
  var theme = themeSelect.options[theme.selectedIndex].value;
  chrome.storage.local.set({ theme: theme });
}

function updateReplaceText() {
  var replaceText = !!replaceTextInput.checked;
  chrome.storage.local.set({ replaceText: replaceText });
}

function itemForUser(user) {
  var close = document.createElement('div');
  close.classList.add('user-list-remove');
  close.textContent = 'x';

  var li = document.createElement('li');
  li.classList.add('user-list-item');
  li.setAttribute('data-user', user);
  li.textContent = user;
  li.appendChild(close);

  return li;
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvd2Jpbm5zc21pdGgvc3JjL3VuZ2l0L29wdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQUksV0FBVyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkQsSUFBSSxnQkFBZ0IsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQy9ELElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDL0MsSUFBSSxTQUFTLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN0RCxJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUVwRCxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFVBQVUsSUFBSSxFQUFFO0FBQzdDLE1BQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO0FBQ2pDLE1BQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0FBQzdCLE1BQUksV0FBVyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDOztBQUVyQyxhQUFXLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUMxQixrQkFBZ0IsQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO0FBQ3ZDLFlBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFbEIsYUFBVyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUNwRCxrQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsaUJBQWlCLENBQUMsQ0FBQzs7QUFFL0QsTUFBSSxDQUFD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Qzs7QUFFdEIsU0FBTyxFQUFFLENBQUM7Q0FDWCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJsZXQgdGhlbWVTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGhlbWUnKTtcbmxldCByZXBsYWNlVGV4dElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlcGxhY2UtdGV4dCcpO1xubGV0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkLWZvcm0nKTtcbmxldCB1c2VySW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlci1pbnB1dCcpO1xubGV0IHVzZXJMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXItbGlzdCcpO1xuXG5jaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQobnVsbCwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgbGV0IHRoZW1lID0gZGF0YS50aGVtZSB8fCAnY2F0cyc7XG4gIGxldCB1c2VycyA9IGRhdGEudXNlcnMgfHwgW107XG4gIGxldCByZXBsYWNlVGV4dCA9ICEhZGF0YS5yZXBsYWNlVGV4dDtcblxuICB0aGVtZVNlbGVjdC52YWx1ZSA9IHRoZW1lO1xuICByZXBsYWNlVGV4dElucHV0LmNoZWNrZWQgPSByZXBsYWNlVGV4dDtcbiAgcmVuZGVyTGlzdCh1c2Vycyk7XG5cbiAgdGhlbWVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlVGhlbWUpO1xuICByZXBsYWNlVGV4dElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHVwZGF0ZVJlcGxhY2VUZXh0KTtcblxuICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IHVzZXIgPSB1c2VySW5wdXQudmFsdWUudHJpbSgpO1xuICAgIGlmICh1c2VyICYmICF+dXNlcnMuaW5kZXhPZih1c2VyKSkge1xuICAgICAgdXNlcnMucHVzaCh1c2VyKTtcbiAgICAgIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7dXNlcnN9KTtcbiAgICAgIHJlbmRlckxpc3QodXNlcnMpO1xuICAgICAgdXNlcklucHV0LnZhbHVlID0gJyc7XG4gICAgfVxuICB9KTtcblxuICAvLyBoYW5kbGUgcmVtb3ZhbHNcbiAgdXNlckxpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGxldCB0ID0gZS50YXJnZXQ7XG5cbiAgICBpZiAodC5jbGFzc05hbWUubWF0Y2goL3VzZXItbGlzdC1yZW1vdmUvKSkge1xuICAgICAgbGV0IHVzZXIgPSB0LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXInKTtcbiAgICAgIHVzZXJzID0gdXNlcnMuZmlsdGVyKHUgPT4gdSAhPSB1c2VyKTtcbiAgICAgIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7dXNlcnN9KTtcbiAgICAgIHJlbmRlckxpc3QodXNlcnMpO1xuICAgIH1cbiAgfSk7XG5cbn0pO1xuXG5mdW5jdGlvbiByZW5kZXJMaXN0KHVzZXJzKSB7XG4gIHVzZXJMaXN0LmlubmVySFRNTCA9ICcnO1xuICB1c2Vycy5mb3JFYWNoKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgdXNlckxpc3QuYXBwZW5kQ2hpbGQoaXRlbUZvclVzZXIodXNlcikpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlVGhlbWUoKSB7XG4gIGxldCB0aGVtZSA9IHRoZW1lU2VsZWN0Lm9wdGlvbnNbdGhlbWUuc2VsZWN0ZWRJbmRleF0udmFsdWU7XG4gIGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7dGhlbWV9KTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlUmVwbGFjZVRleHQoKSB7XG4gIGxldCByZXBsYWNlVGV4dCA9ICEhcmVwbGFjZVRleHRJbnB1dC5jaGVja2VkO1xuICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoe3JlcGxhY2VUZXh0fSk7XG59XG5cbmZ1bmN0aW9uIGl0ZW1Gb3JVc2VyKHVzZXIpIHtcbiAgbGV0IGNsb3NlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNsb3NlLmNsYXNzTGlzdC5hZGQoJ3VzZXItbGlzdC1yZW1vdmUnKTtcbiAgY2xvc2UudGV4dENvbnRlbnQgPSAneCc7XG5cbiAgbGV0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgbGkuY2xhc3NMaXN0LmFkZCgndXNlci1saXN0LWl0ZW0nKTtcbiAgbGkuc2V0QXR0cmlidXRlKCdkYXRhLXVzZXInLCB1c2VyKTtcbiAgbGkudGV4dENvbnRlbnQgPSB1c2VyO1xuICBsaS5hcHBlbmRDaGlsZChjbG9zZSk7XG5cbiAgcmV0dXJuIGxpO1xufVxuIl19
